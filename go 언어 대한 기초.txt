:= 왠만하면 이거로 변수 선언한다 int string 대충 써라.
const  name  = "상수를 쓰고 싶을때 이렇게 써라."
함수 생성    //  뒤에  리턴타입을 적는거다.
func  XXXX(a  type, b tpye)  type {

   return a+ b
}

func  XXXX(a  int, b int, myname string) (int,string) {
   함수리턴이 2개이상도 가능하다.
   return a+ b, myname;
}

result := plus(2,3,4,5,6,7,8)


func plus(a ... int) int {   // 이러면 a array인자값을 받음.
   total:=0;
   for index,item := range a {   // index 일종의 주소  item 인자값    _ 쓰면 무시된다.
       total+=item
   }
   return total
}


 name:= "it is dog"
for _,letter := range name {
  fmt.println(letter);   // byte 로 나온다.
   fmt.println(string(letter));   // 글자가 나온다.
}

foods := [3]string{"potato","piiza","lamen"}

for _, dish := range  foods{

fmt.println(dish)
}
   len( 배열)// 배열의 길이
for i:= 0;i<len(foods);i++{
  fmt.println(foods[i])
}

================================================2021/06/19
slice  는 배열의 길이가 무한하다.  //배열의 길이만 없애면 슬라이스.
foods := []string{"potato","piiza","lamen"}
fmt.printf("%v\n",foods)
foods = append(foods,"banana")  // 배열길이, "타입"
fmt.printf("%v\n",foods)

NEwfood := append(foods,"paper")  // 새로운 배열

struct 구조 만들기

type persion struct {
 name string
 age int
}

func (p person) sayHello(){
     fmt.printf("Hello my name is %s and age %d",p.name,p.age);
}

//recevier